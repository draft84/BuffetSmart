"""
Django settings for buffetsmart project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import apscheduler.jobstores.sqlalchemy as sqlalchemy_jobstores
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ok66*mi-n7)0wg77i*xie!6z1!(js4(ex@t5v57y2lbqi@k61c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'dishes',
    'labels',
    'django_filters',
    'rest_framework_simplejwt',
    'corsheaders',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.IsAuthenticated',
    # ],
}


from datetime import timedelta


SIMPLE_JWT = {
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=120),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id'
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'dishes.middleware.SchemaMiddleware',
]

ROOT_URLCONF = 'buffetsmart.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'buffetsmart.wsgi.application'

CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
CSRF_USE_SESSIONS = True
CSRF_TRUSTED_ORIGINS = ['https://api.grancervantes.bs.sincroni.io']

jobstores = {
    # 'default': sqlalchemy_jobstores.SQLAlchemyJobStore(url='postgresql://buffetsmart:Sincroni@host:5432/buffetsmart')
    'default': sqlalchemy_jobstores.SQLAlchemyJobStore(url='postgresql://postgres:1234@host:5432/BuffetSmart')
}

SCHEMAS = [
    'public',
    'bf_tenerife',
    'bf_mar',
    'bf_castillo',
    'bf_corralejobay',
    'bf_lanzaroteactiveresort',
    'bf_lanzaroteplayablanca',
    'bf_rocanegra',
    'bf_santiago',
    'bf_margaritas',
    'bs_alandalus',
    'bs_arenaltower',
    'bs_bonanza',
    'bs_clubmartha',
    'bs_costabastian',
    'bs_costajardin',
    'bs_costaverde',
    'bs_interpalace',
    'bs_jaime',
    'bs_lagosdelcesar',
    'bs_mediodia',
    'bs_teguise',
    'bs_jandia',
    'bs_grancervantes',
    'bs_arenaltower',
    'kp_losmonteros',
    'bs_calamillor',
    'bs_granplaya',
    'bs_ambarromani',
    'bs_piscis',
    'bf_jandiamar',
    'monument'
]

# CONEX WEB
# DATABASES = {
#    'default': {
#    	   'ENGINE': 'django.db.backends.postgresql_psycopg2',
#        'NAME': 'buffetsmart',
#        'USER': 'buffetsmart',
#        'PASSWORD': 'Sincroni',
#        'HOST': '10.108.0.15',
#        'PORT': '5432',
#       }
# }

# CONEX LOCAL
DATABASES = {
    'default': {
	'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'BuffetSmart',
        'USER': 'postgres',
        'PASSWORD': '1234',
        'HOST': 'localhost',
        'PORT': '5432',
     }
 }


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
import os
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# CORS_ALLOWED_ORIGINS = [
#     "https://dev.sncrn.r3n.es",
#     "http://localhost:4200",
#     "http://127.0.0.1:4200",
#     "https://tenerife.menu.sincroni.io",
#     "https://api.tenerife.menu.sincroni.io",
# ]
CORS_ALLOW_ALL_ORIGINS = True
